{"version":3,"sources":["components/header/Header.jsx","components/ProductItem.jsx","actions/index.js","components/ProductList.jsx","App.js","reducers/index.js","index.js"],"names":["Header","submitFilter","className","ProductItem","this","props","info","addProduct","productName","icon","price","inventory","onClick","disabled","React","Component","mapActionsToProps","product","type","connect","mapStoreToProps","ProductList","allItems","items","map","item","i","key","Fragment","store","Object","values","products","App","allReducers","quantity","state","action","cart","id","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"utCA2BeA,EAzBA,SAAC,GAAmB,EAAlBC,aACf,OACE,6BACE,yBAAKC,UAAU,QACb,qCAGF,yBAAKA,UAAU,eACb,yBAAKA,UAAU,SAAf,WACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,WAAf,WACA,yBAAKA,UAAU,WAAf,cACA,yBAAKA,UAAU,WAAf,gBAIJ,yBAAKA,UAAU,QACb,uBAAGA,UAAU,0BACb,yBAAKA,UAAU,gBAAf,gBACA,yBAAKA,UAAU,YAAf,Q,OCjBFC,E,uKACM,IAAD,EACsBC,KAAKC,MAA1BC,EADD,EACCA,KAAMC,EADP,EACOA,WAEd,OACE,4BACE,8BACE,yBAAKL,UAAU,iBACd,+BAAKI,EAAKE,aADX,IAC4B,2BAAIF,EAAKG,OAErC,yBAAKP,UAAU,iBAAiBI,EAAKI,MAArC,UACA,yBAAKR,UAAU,qBACZI,EAAKK,UAAY,EAAjB,YACQL,EAAKK,UADb,eAEG,yBAAKT,UAAU,gBAAf,kBAKN,4BAAQA,UAAU,cAChBU,QAAS,kBAAML,EAAWD,IAC1BO,SAA6B,IAAnBP,EAAKK,WAEdL,EAAKK,UAAY,EAAI,cAAgB,iB,GAvBxBG,IAAMC,WAiC1BC,EAAoB,CACxBT,WCpCiB,SAACU,GAClB,MAAO,CACLC,KAAM,cACND,aDmCWE,mBAAQC,EAAmBJ,EAA3BG,CAA8ChB,GEpCvDkB,E,uKACM,IAIFC,EAHYlB,KAAKC,MAAfkB,MAGeC,KAAI,SAACC,EAAMC,GAChC,OAAO,kBAAC,EAAD,CAAaC,IAAKD,EAAGpB,KAAMmB,OAGpC,OACE,kBAAC,IAAMG,SAAP,KACE,4BAAKN,Q,GAXaR,IAAMC,WAqBjBI,eAJS,SAACU,GAAD,MAAY,CAClCN,MAAOO,OAAOC,OAAOF,EAAMG,aAGdb,CAAyBE,GCrBnBY,E,uKAEjB,OACE,kBAAC,IAAML,SAAP,KACE,kBAAC,EAAD,MAEA,yBAAK1B,UAAU,aACb,4CACA,kBAAC,EAAD,Y,GARuBa,a,qBCkChBmB,EArCG,WAAyB,IAKrCC,EAAUxB,EALGyB,EAAuB,uDAAf,GAAIC,EAAW,uCAChCC,EAAmBF,EAAnBE,KAAMN,EAAaI,EAAbJ,SAENf,EAAYoB,EAAZpB,QAHgC,EAILA,GAAW,GAAtCsB,EAJgC,EAIhCA,GAAI/B,EAJ4B,EAI5BA,YAAaE,EAJe,EAIfA,MAGzB,OAAQ2B,EAAOnB,MACb,IAAK,cAKH,OAJAiB,EAAWG,EAAKC,GAAMD,EAAKC,GAAIJ,SAAW,EAE1CxB,EACEM,EAAQN,UAAY,EAAIM,EAAQN,UAAY,EAAIM,EAAQN,UACnD,2BACFyB,GADL,IAEEJ,SAAS,2BACJA,GADG,kBAELO,EAFK,2BAGDtB,GAHC,IAIJN,gBAGJ2B,KAAK,2BACAA,GADD,kBAEDC,EAAK,CACJA,KACA/B,cACAE,QACAyB,SAAUA,EAAW,OAI7B,QACE,OAAOC,I,QCvBTP,EAAQW,YACZN,EACA,CACEF,SAAUA,EACVM,KAAM,IAERG,OAAOC,8BAAgCD,OAAOC,gCAGhDC,IAASC,OACP,kBAAC,IAAD,CAAUf,MAAOA,GACf,kBAAC,EAAD,OAEFgB,SAASC,eAAe,W","file":"static/js/main.a86698aa.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = ({submitFilter}) => {\n  return (\n    <nav>\n      <div className=\"logo\">\n        <p>Swish</p>\n      </div>\n\n      <div className=\"filters-box\">\n        <div className=\"title\">Filters</div>\n        <div className=\"filters\">\n          <div className=\"filter1\">#0-10 $</div>\n          <div className=\"filter2\">#over 10 $</div>\n          <div className=\"filter3\">Glutenfree</div>\n        </div>\n      </div>\n\n      <div className=\"cart\">\n        <i className=\"fas fa-concierge-bell\"></i>\n        <div className=\"order-status\">ORDER STATUS</div>\n        <div className=\"items-no\">0</div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addProduct } from \"../actions\";\n\nclass ProductItem extends React.Component {\n  render() {\n    const { info, addProduct } = this.props;\n   // console.log(this.props);\n    return (\n      <li>\n        <span>\n          <div className=\"product-title\">\n           <p> {info.productName}</p> <i>{info.icon}</i>\n           </div>\n          <div className=\"product-price\">{info.price}â‚¬</div>\n          <div className=\"product-inventory\">\n            {info.inventory > 0\n              ? `x ${info.inventory} items left`\n              : <div className=\"out-of-stock\">Out of stock</div>}\n          </div>\n        </span>\n\n        \n          <button className=\"product-add\"\n            onClick={() => addProduct(info)}\n            disabled={info.inventory === 0}\n          >\n            {info.inventory > 0 ? \"Add to cart\" : \"Sold out\"}\n          </button>\n       \n\n      </li>\n    );\n  }\n}\n\nconst mapStoreToProps = (store) => {};\nconst mapActionsToProps = {\n  addProduct,\n};\nexport default connect(mapStoreToProps(), mapActionsToProps)(ProductItem);\n","// step 1.\n\nconst addProduct = (product) => {\n  return {\n    type: \"ADD_PRODUCT\",\n    product,\n  };\n};\nconst removeOne = (product) => {\n    return {\n      type: \"REMOVE_ONE\",\n      product,\n    };\n  };\n\n  const removeAll = (product) => {\n    return {\n      type: \"REMOVE_ALL\",\n      product,\n    };\n  };\n\n  const checkout = () => {\n    return {\n      type: \"CHECKOUT\",\n      \n    };\n  };\n\n  export {addProduct, removeOne, removeAll, checkout};","import React from \"react\";\nimport ProductItem from \"./ProductItem\";\nimport { connect } from \"react-redux\";\n\nclass ProductList extends React.Component {\n  render() {\n    const { items } = this.props;\n  \n\n    const allItems = items.map((item, i) => {\n      return <ProductItem key={i} info={item} />;\n    });\n  \n    return (\n      <React.Fragment>\n        <ul>{allItems}</ul>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStoreToProps = (store) => ({\n  items: Object.values(store.products),\n});\n\nexport default connect(mapStoreToProps)(ProductList);\n\n","import React, { Component } from \"react\";\nimport Header from \"./components/header/Header\";\nimport ProductList from \"./components/ProductList\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header\n        />\n        <div className=\"container\">\n          <h1>All Products</h1>\n          <ProductList/>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","// step 2.\nconst allReducers = (state = {}, action) => {\n    const { cart, products } = state;\n    // console.log(state);\n    const { product } = action;\n    const { id, productName, price } = product || {};\n    let quantity, inventory, newCart;\n\n    switch (action.type) {\n      case \"ADD_PRODUCT\":\n        quantity = cart[id] ? cart[id].quantity : 0;\n        \n        inventory =\n          product.inventory > 0 ? product.inventory - 1 : product.inventory;\n        return {\n          ...state,\n          products: {\n            ...products,\n            [id]: {\n              ...product,\n              inventory,\n            },\n          },\n          cart: {\n            ...cart,\n            [id]: {\n              id,\n              productName,\n              price,\n              quantity: quantity + 1,\n            },\n          },\n        };\n      default:\n        return state;\n    }\n  };\n  \n  export default allReducers;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/main.scss\";\nimport App from \"./App.js\";\n//  step 3.\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport allReducers from \"./reducers\";\n// products data\nimport products from \"./data.json\";\n//console.log(allReducers)\nconst store = createStore(\n  allReducers,\n  {\n    products: products,\n    cart: {},\n  },\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}