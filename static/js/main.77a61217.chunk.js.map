{"version":3,"sources":["components/header/Header.jsx","components/ProductItem.jsx","actions/index.js","components/ProductList.jsx","App.js","reducers/index.js","index.js"],"names":["Header","store","this","props","console","log","cart","totalSum","Object","values","map","element","quantity","reduce","a","b","className","React","Component","connect","ProductItem","info","addProduct","removeOne","classes","extraText","inventory","push","productName","icon","price","onClick","disabled","mapActionsToProps","product","type","mapStoreToProps","ProductList","allItems","items","item","i","key","Fragment","products","App","allReducers","newCart","state","action","id","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77a61217.chunk.js","sourcesContent":["import React from \"react\";\nimport {connect} from 'react-redux';\nimport { addProduct } from \"../../actions\";\n\nclass Header extends React.Component {\n  render() {\n    //console.log(this.props);\n   const {store} = this.props;\n   console.log(store);\n    const {cart} = store;\n    //console.log(cart);\n    const values = Object.values(cart)\n    // console.log(values);\n   \n    const cartNum = values.map(element => (\n     element.quantity\n   ));\n  let totalSum = cartNum.reduce((a,b) => a+b,0);\n  //let diff = cartNum - totalSum;\n  \n  \n  return (\n    <nav>\n      <div className=\"logo\">\n        <p>Swish</p>\n      </div>\n\n      <div className=\"filters-box\">\n        <div className=\"title\">Filters</div>\n        <div className=\"filters\">\n          <div className=\"filter1\">#0-10 $</div>\n          <div className=\"filter2\">#over 10 $</div>\n          <div className=\"filter3\">Glutenfree</div>\n        </div>\n      </div>\n\n      <div className=\"cart\">\n        <i className=\"fas fa-concierge-bell\"></i>\n        <div className=\"order-status\">ORDER STATUS</div>\n        <div className=\"items-no\">\n          {/* {addProduct ? <p>{totalSum}</p>: <p>{diff}</p> } */}\n          {totalSum}\n          </div>\n      </div>\n    </nav>\n  );\n};\n}\nconst mapStateToProps = (store)=>{\n  return{\n    store,\n  }\n}\nexport default connect(mapStateToProps)(Header);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addProduct, removeOne } from \"../actions\";\n\nclass ProductItem extends React.Component {\n  render() {\n   // console.log(this.props.info.inventory);\n    const { info, addProduct, removeOne } = this.props;\n    \n    //Changing classes in the scss // adding extra text\n    let classes = [];\n    let extraText = \"\";\n    if (info.inventory <= 3) {\n      classes.push(\"out-of-stock\");\n      extraText = \"Last\";\n    }\n\n    return (\n      <li>\n        <span>\n          <div className=\"product-title\">\n            <p> {info.productName}</p> <i>{info.icon}</i>\n          </div>\n          <div className=\"product-price\">{info.price}â‚¬</div>\n          <div className=\"product-inventory\">\n            {info.inventory > 0 ? (\n              <div className={classes}>\n                {extraText} {info.inventory} items left{\" \"}\n              </div>\n            ) : (\n              <div className=\"out-of-stock\">Out of stock</div>\n            )}\n          </div>\n        </span>\n\n        <button\n          className=\"product-add\"\n          onClick={() => addProduct(info)}\n          disabled={info.inventory === 0}\n        >\n          {info.inventory > 0 ? \"Add to cart\" : \"Sold out\"}\n        </button>\n        <button\n          className=\"product-add\"\n          onClick={() => removeOne(info)}\n          disabled={info.inventory < 0}\n        >\n         \n          {info.inventory >= 0 ? \"Delete an Item\" : \"Cart is empty\"}\n        </button>\n        \n      </li>\n    );\n  }\n}\n\nconst mapStoreToProps = (store) => {};\nconst mapActionsToProps = {\n  addProduct,\n  removeOne,\n};\nexport default connect(mapStoreToProps(), mapActionsToProps)(ProductItem);\n","// step 1.\n\nconst addProduct = (product) => {\n  return {\n    type: \"ADD_PRODUCT\",\n    product,\n  };\n};\nconst removeOne = (product) => {\n    return {\n      type: \"REMOVE_ONE\",\n      product,\n    };\n  };\n\n  const removeAll = (product) => {\n    return {\n      type: \"REMOVE_ALL\",\n      product,\n    };\n  };\n\n  const checkout = () => {\n    return {\n      type: \"CHECKOUT\",\n      \n    };\n  };\n\n  export {addProduct, removeOne, removeAll, checkout};","import React from \"react\";\nimport ProductItem from \"./ProductItem\";\nimport { connect } from \"react-redux\";\n\nclass ProductList extends React.Component {\n  render() {\n  //console.log(this.props)\n    const { items } = this.props;\n  \n\n    const allItems = items.map((item, i) => {\n      return <ProductItem key={i} info={item} />;\n    });\n  \n    return (\n      <React.Fragment>\n        <ul>{allItems}</ul>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStoreToProps = (store) => ({\n  items: Object.values(store.products),\n});\n\nexport default connect(mapStoreToProps)(ProductList);\n\n","import React, { Component } from \"react\";\nimport Header from \"./components/header/Header\";\nimport ProductList from \"./components/ProductList\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header\n        />\n        <div className=\"container\">\n          <h1>All Products</h1>\n          <ProductList/>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","// step 2.\nconst allReducers = (state = {}, action) => {\n  const { cart, products } = state;\n  // console.log(state);\n  const { product } = action;\n  const { id, productName, price } = product || {};\n  let quantity, inventory, newCart;\n\n  switch (action.type) {\n    case \"ADD_PRODUCT\":\n      quantity = cart[id] ? cart[id].quantity : 0;\n\n      inventory =\n        product.inventory > 0 ? product.inventory - 1 : product.inventory;\n      newCart = product;\n      return {\n        ...state,\n        products: {\n          ...products,\n          [id]: {\n            ...product,\n            inventory,\n          },\n        },\n        cart: {\n          ...cart,\n          [id]: {\n            id,\n            productName,\n            price,\n            quantity: quantity + 1,\n          },\n        },\n      };\n\n      case \"REMOVE_ONE\":\n        inventory = products[id].inventory;\n        quantity = product.quantity;\n        newCart = { ...cart };\n        delete newCart[id];\n        return {\n          ...state,\n          cart:\n            quantity > 1\n              ? { ...cart, \n                [id]: { \n                  ...product, \n                  quantity: quantity - 1 } }\n              : newCart,\n          products: {\n            ...products,\n            [id]: {\n              ...product,\n              inventory: inventory + 1,\n            },\n          },\n        };\n\n    default:\n      return state;\n  }\n};\n\nexport default allReducers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/main.scss\";\nimport App from \"./App.js\";\n//  step 3.\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport allReducers from \"./reducers\";\n// products data\nimport products from \"./data.json\";\n//console.log(allReducers)\n//console.log(products)\nconst store = createStore(\n  allReducers,\n  {\n    products: products,\n    cart: {},\n  },\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}