{"version":3,"sources":["components/header/Header.jsx","components/ProductItem.jsx","actions/index.js","components/ProductList.jsx","App.js","reducers/index.js","index.js"],"names":["Header","cart","this","props","store","total","Object","values","map","element","quantity","reduce","a","b","className","React","Component","connect","ProductItem","info","addProduct","productName","icon","price","inventory","onClick","disabled","mapActionsToProps","product","type","mapStoreToProps","ProductList","allItems","items","item","i","key","Fragment","products","App","allReducers","state","action","id","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"8tCAGMA,E,uKACK,IAIAC,EAFQC,KAAKC,MAAdC,MAECH,KAQLI,EANaC,OAAOC,OAAON,GAGNO,KAAI,SAAAC,GAAO,OACjCA,EAAQC,YAESC,QAAO,SAACC,EAAEC,GAAH,OAASD,EAAEC,IAAE,GAIxC,OACE,6BACE,yBAAKC,UAAU,QACb,qCAGF,yBAAKA,UAAU,eACb,yBAAKA,UAAU,SAAf,WACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,WAAf,WACA,yBAAKA,UAAU,WAAf,cACA,yBAAKA,UAAU,WAAf,gBAIJ,yBAAKA,UAAU,QACb,uBAAGA,UAAU,0BACb,yBAAKA,UAAU,gBAAf,gBACA,yBAAKA,UAAU,YAAYT,S,GAnCdU,IAAMC,WA8CZC,eALS,SAACb,GACvB,MAAM,CACJA,WAGWa,CAAyBjB,GC7ClCkB,E,uKACM,IAAD,EACsBhB,KAAKC,MAA1BgB,EADD,EACCA,KAAMC,EADP,EACOA,WAEd,OACE,4BACE,8BACE,yBAAKN,UAAU,iBACd,+BAAKK,EAAKE,aADX,IAC4B,2BAAIF,EAAKG,OAErC,yBAAKR,UAAU,iBAAiBK,EAAKI,MAArC,UACA,yBAAKT,UAAU,qBACZK,EAAKK,UAAY,EAAjB,YACQL,EAAKK,UADb,eAEG,yBAAKV,UAAU,gBAAf,kBAKN,4BAAQA,UAAU,cAChBW,QAAS,kBAAML,EAAWD,IAC1BO,SAA6B,IAAnBP,EAAKK,WAEdL,EAAKK,UAAY,EAAI,cAAgB,iB,GAvBxBT,IAAMC,WAiC1BW,EAAoB,CACxBP,WCpCiB,SAACQ,GAClB,MAAO,CACLC,KAAM,cACND,aDmCWX,mBAAQa,EAAmBH,EAA3BV,CAA8CC,GEpCvDa,E,uKACK,IAKDC,EAHY9B,KAAKC,MAAf8B,MAGezB,KAAI,SAAC0B,EAAMC,GAChC,OAAO,kBAAC,EAAD,CAAaC,IAAKD,EAAGhB,KAAMe,OAGpC,OACE,kBAAC,IAAMG,SAAP,KACE,4BAAKL,Q,GAZajB,IAAMC,WAsBjBC,eAJS,SAACb,GAAD,MAAY,CAClC6B,MAAO3B,OAAOC,OAAOH,EAAMkC,aAGdrB,CAAyBc,GCtBnBQ,E,uKAEjB,OACE,kBAAC,IAAMF,SAAP,KACE,kBAAC,EAAD,MAEA,yBAAKvB,UAAU,aACb,4CACA,kBAAC,EAAD,Y,GARuBE,a,qBCqChBwB,EAxCG,WAAyB,IAKrC9B,EAAUc,EALGiB,EAAuB,uDAAf,GAAIC,EAAW,uCAChCzC,EAAmBwC,EAAnBxC,KAAMqC,EAAaG,EAAbH,SAENV,EAAYc,EAAZd,QAHgC,EAILA,GAAW,GAAtCe,EAJgC,EAIhCA,GAAItB,EAJ4B,EAI5BA,YAAaE,EAJe,EAIfA,MAGzB,OAAQmB,EAAOb,MACb,IAAK,cAQH,OAPAnB,EAAWT,EAAK0C,GAAM1C,EAAK0C,GAAIjC,SAAW,EAE1Cc,EACEI,EAAQJ,UAAY,EAAII,EAAQJ,UAAY,EAAII,EAAQJ,UAEtDI,EAEG,2BACFa,GADL,IAEEH,SAAS,2BACJA,GADG,kBAELK,EAFK,2BAGDf,GAHC,IAIJJ,gBAGJvB,KAAK,2BACAA,GADD,kBAED0C,EAAK,CACJA,KACAtB,cACAE,QACAb,SAAUA,EAAW,OAI7B,QACE,OAAO+B,I,QC1BTrC,EAAQwC,YACZJ,EACA,CACEF,SAAUA,EACVrC,KAAM,IAER4C,OAAOC,8BAAgCD,OAAOC,gCAGhDC,IAASC,OACP,kBAAC,IAAD,CAAU5C,MAAOA,GACf,kBAAC,EAAD,OAEF6C,SAASC,eAAe,W","file":"static/js/main.0b69ed8f.chunk.js","sourcesContent":["import React from \"react\";\nimport {connect} from 'react-redux';\n\nclass Header extends React.Component {\n  render() {\n    //console.log(this.props);\n   const {store} = this.props;\n   // console.log(store);\n    const {cart} = store;\n    //console.log(cart);\n    const values = Object.values(cart)\n    // console.log(values);\n   \n    const cartNum = values.map(element => (\n     element.quantity\n   ));\n  let total = cartNum.reduce((a,b) => a+b,0);\n  \n  \n  \n  return (\n    <nav>\n      <div className=\"logo\">\n        <p>Swish</p>\n      </div>\n\n      <div className=\"filters-box\">\n        <div className=\"title\">Filters</div>\n        <div className=\"filters\">\n          <div className=\"filter1\">#0-10 $</div>\n          <div className=\"filter2\">#over 10 $</div>\n          <div className=\"filter3\">Glutenfree</div>\n        </div>\n      </div>\n\n      <div className=\"cart\">\n        <i className=\"fas fa-concierge-bell\"></i>\n        <div className=\"order-status\">ORDER STATUS</div>\n        <div className=\"items-no\">{total}</div>\n      </div>\n    </nav>\n  );\n};\n}\nconst mapStateToProps = (store)=>{\n  return{\n    store,\n  }\n}\nexport default connect(mapStateToProps)(Header);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addProduct } from \"../actions\";\n\nclass ProductItem extends React.Component {\n  render() {\n    const { info, addProduct } = this.props;\n   //console.log(addProduct);\n    return (\n      <li>\n        <span>\n          <div className=\"product-title\">\n           <p> {info.productName}</p> <i>{info.icon}</i>\n           </div>\n          <div className=\"product-price\">{info.price}â‚¬</div>\n          <div className=\"product-inventory\">\n            {info.inventory > 0\n              ? `x ${info.inventory} items left`\n              : <div className=\"out-of-stock\">Out of stock</div>}\n          </div>\n        </span>\n\n        \n          <button className=\"product-add\"\n            onClick={() => addProduct(info)}\n            disabled={info.inventory === 0}\n          >\n            {info.inventory > 0 ? \"Add to cart\" : \"Sold out\"}\n          </button>\n       \n\n      </li>\n    );\n  }\n}\n\nconst mapStoreToProps = (store) => {};\nconst mapActionsToProps = {\n  addProduct,\n};\nexport default connect(mapStoreToProps(), mapActionsToProps)(ProductItem);\n","// step 1.\n\nconst addProduct = (product) => {\n  return {\n    type: \"ADD_PRODUCT\",\n    product,\n  };\n};\nconst removeOne = (product) => {\n    return {\n      type: \"REMOVE_ONE\",\n      product,\n    };\n  };\n\n  const removeAll = (product) => {\n    return {\n      type: \"REMOVE_ALL\",\n      product,\n    };\n  };\n\n  const checkout = () => {\n    return {\n      type: \"CHECKOUT\",\n      \n    };\n  };\n\n  export {addProduct, removeOne, removeAll, checkout};","import React from \"react\";\nimport ProductItem from \"./ProductItem\";\nimport { connect } from \"react-redux\";\n\nclass ProductList extends React.Component {\n  render() {\n   // console.log(this.props)\n    const { items } = this.props;\n  \n\n    const allItems = items.map((item, i) => {\n      return <ProductItem key={i} info={item} />;\n    });\n  \n    return (\n      <React.Fragment>\n        <ul>{allItems}</ul>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStoreToProps = (store) => ({\n  items: Object.values(store.products),\n});\n\nexport default connect(mapStoreToProps)(ProductList);\n\n","import React, { Component } from \"react\";\nimport Header from \"./components/header/Header\";\nimport ProductList from \"./components/ProductList\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header\n        />\n        <div className=\"container\">\n          <h1>All Products</h1>\n          <ProductList/>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","// step 2.\nconst allReducers = (state = {}, action) => {\n    const { cart, products } = state;\n    // console.log(state);\n    const { product } = action;\n    const { id, productName, price } = product || {};\n    let quantity, inventory, newCart;\n\n    switch (action.type) {\n      case \"ADD_PRODUCT\":\n        quantity = cart[id] ? cart[id].quantity : 0;\n        \n        inventory =\n          product.inventory > 0 ? product.inventory - 1 : product.inventory;\n          newCart = \n            product\n          ;\n        return {\n          ...state,\n          products: {\n            ...products,\n            [id]: {\n              ...product,\n              inventory,\n            },\n          },\n          cart: {\n            ...cart,\n            [id]: {\n              id,\n              productName,\n              price,\n              quantity: quantity + 1,\n            },\n          },\n        };\n      default:\n        return state;\n    }\n  };\n  \n  export default allReducers;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/main.scss\";\nimport App from \"./App.js\";\n//  step 3.\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport allReducers from \"./reducers\";\n// products data\nimport products from \"./data.json\";\n//console.log(allReducers)\nconst store = createStore(\n  allReducers,\n  {\n    products: products,\n    cart: {},\n  },\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}